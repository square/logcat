public abstract interface annotation class logcat/InternalLogcatApi : java/lang/annotation/Annotation {
}

public final class logcat/LogPriority : java/lang/Enum {
	public static final field ASSERT Llogcat/LogPriority;
	public static final field DEBUG Llogcat/LogPriority;
	public static final field ERROR Llogcat/LogPriority;
	public static final field INFO Llogcat/LogPriority;
	public static final field VERBOSE Llogcat/LogPriority;
	public static final field WARN Llogcat/LogPriority;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun getPriorityInt ()I
	public static fun valueOf (Ljava/lang/String;)Llogcat/LogPriority;
	public static fun values ()[Llogcat/LogPriority;
}

public final class logcat/Logcat {
	public static final fun logcat (Ljava/lang/Object;Llogcat/LogPriority;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
	public static final fun logcat (Ljava/lang/String;Llogcat/LogPriority;Lkotlin/jvm/functions/Function0;)V
	public static synthetic fun logcat$default (Ljava/lang/Object;Llogcat/LogPriority;Ljava/lang/String;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)V
	public static synthetic fun logcat$default (Ljava/lang/String;Llogcat/LogPriority;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)V
}

public abstract interface class logcat/LogcatLogger {
	public static final field Companion Llogcat/LogcatLogger$Companion;
	public static fun getLoggers ()Ljava/util/List;
	public static fun getObserver ()Llogcat/LogcatObserver;
	public static fun install ()V
	public static fun isInstalled ()Z
	public abstract fun isLoggable (Llogcat/LogPriority;)Z
	public abstract fun isLoggable (Llogcat/LogPriority;Ljava/lang/String;)Z
	public abstract fun log (Llogcat/LogPriority;Ljava/lang/String;Ljava/lang/String;)V
	public static fun setObserver (Llogcat/LogcatObserver;)V
	public static fun uninstall ()V
}

public final class logcat/LogcatLogger$Companion {
	public final fun getLogger ()Llogcat/LogcatLogger;
	public final fun getLoggers ()Ljava/util/List;
	public final fun getObserver ()Llogcat/LogcatObserver;
	public final fun install ()V
	public final fun install (Llogcat/LogcatLogger;)V
	public final fun isInstalled ()Z
	public final fun setObserver (Llogcat/LogcatObserver;)V
	public final fun uninstall ()V
}

public final class logcat/LogcatLogger$DefaultImpls {
	public static fun isLoggable (Llogcat/LogcatLogger;Llogcat/LogPriority;)Z
	public static fun isLoggable (Llogcat/LogcatLogger;Llogcat/LogPriority;Ljava/lang/String;)Z
}

public abstract interface class logcat/LogcatObserver {
	public abstract fun afterLog (Llogcat/LogPriority;Ljava/lang/String;)V
	public abstract fun beforeLog (Llogcat/LogPriority;Ljava/lang/String;)V
}

public final class logcat/PrintLogger : logcat/LogcatLogger {
	public static final field INSTANCE Llogcat/PrintLogger;
	public fun isLoggable (Llogcat/LogPriority;)Z
	public fun isLoggable (Llogcat/LogPriority;Ljava/lang/String;)Z
	public fun log (Llogcat/LogPriority;Ljava/lang/String;Ljava/lang/String;)V
}

public final class logcat/ThrowablesKt {
	public static final fun asLog (Ljava/lang/Throwable;)Ljava/lang/String;
}

public final class logcat/internal/Utils_jvmCommonKt {
	public static final fun outerClassSimpleName (Ljava/lang/Object;)Ljava/lang/String;
}

